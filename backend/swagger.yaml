swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Liste des transactions groupées par compte
      description: Récupère toutes les transactions du mois en cours, groupées par compte
      produces:
        - application/json
      responses:
        "200":
          description: Transactions groupées par compte
          schema:
            type: array
            items:
              $ref: "#/definitions/CompteTransactions"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Ajouter une transaction
      description: Ajoute une nouvelle transaction
      parameters:
        - in: body
          name: body
          description: Détails de la transaction à ajouter
          required: true
          schema:
            $ref: "#/definitions/TransactionInput"
      produces:
        - application/json
      responses:
        "201":
          description: Transaction créée avec succès
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /transactions/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Détail d'une transaction
      description: Affiche les détails d'une transaction par son ID
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: ID de la transaction
      produces:
        - application/json
      responses:
        "200":
          description: Détails de la transaction
          schema:
            $ref: "#/definitions/Transaction"
        "404":
          description: Transaction non trouvée
        "500":
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Modifier une transaction
      description: Met à jour les informations d'une transaction existante
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          description: Données mises à jour
          required: true
          schema:
            $ref: "#/definitions/TransactionInput"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction mise à jour
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Supprimer une transaction
      description: Supprime une transaction par ID
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: Transaction supprimée
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date
      montant:
        type: number
        format: float
      description:
        type: string
      compte_id:
        type: string

  TransactionInput:
    type: object
    required:
      - date
      - montant
      - description
      - compte_id
    properties:
      date:
        type: string
        format: date
      montant:
        type: number
        format: float
      description:
        type: string
      compte_id:
        type: string

  CompteTransactions:
    type: object
    properties:
      compte_id:
        type: string
      compte_nom:
        type: string
      transactions:
        type: array
        items:
          $ref: "#/definitions/Transaction"
